#organization_profile.profile

  %h1
    = @organization.name
    - unless @organization.subscribers.include? current_user
      #subscribe= button_to "Subscribe to #{ @organization.name } on CommonPlace!", organization_subscription_url(@organization)

  .left_col
    = image_tag @organization.avatar_url(:large), :id => "profile_photo"
  
    %ul#contact.styled_list
      %li Contact Information
      %li.intense.clickable= "Send a Message".upcase
      - unless @organization.phone.blank?
        %li
          %span.label Phone:
          = @organization.phone
      - unless @organization.website.blank?
        %li
          %span.label Website:
          - link_to @organization.website do
            %span#org_url= @organization.website
    
    %ul#members.styled_list
      %li Members (#{ @organization.subscribers.length })
      - @organization.subscribers.take(5).each do |subscriber|
        %li.member.clickable
          .user_image= image_tag subscriber.avatar_url, :size => "30x30"
          .user_info
            .user_name= subscriber.name
            .user_role subscriber
      - if @organization.subscribers.length > 5
        %li.intense.clickable= "+ view all members".upcase

    - if @organization.subscribers.include? current_user
      =button_to "Unsubscribe from #{ @organization.name }", organization_subscription_url(@organization), :method => :delete, :id => :unsubscribe


  .middle_col
    - if flash[:win]
      #win= flash[:win]
    
    %ul#modules
      %li.profile_field
        %h3 About us
        %p= @organization.about
  
      - @organization.profile_fields.sort{ |x,y| x.position <=> y.position }.each do |p|
        %li.profile_field
          %h3= p.subject
          %p= p.body
    
    %ul
      - unless @organization.lat.blank? or @organization.lng.blank?
        %li#map_container
          %h3 Location
          = render_map do |map|
            - map.center :lat => organization.lat, :lng => organization.lng
            - map.marker :lat => current_user.lat, :lng => current_user.lng
            - map.marker :lat => organization.lat, :lng => organization.lng
            - map.directions do |dir|
              - dir.origin :lat => current_user.lat, :lng => current_user.lng
              - dir.destination :lat => organization.lat, :lng => organization.lng
        
    
      %li#events
        %h3.underline Upcoming Events
        %ul#organization_events
          - @organization.events.each do |event|
            %li
              .small_calendar= render("events/calendar", :event => event)
              .body
                %h3
                  = event.subject
                  .attendance
                    .check_box
                      - if event.attendees.exists? current_user
                        &#x2713;
                    ATTEND

                .event_start_time= full_date(event.date,event.start_time)
                %p= event.body
              
  

  

  %ul.right_col
    %li Announcements
  
    - @organization.announcements.each do |a|
      %li
        %h3= a.subject
        %p= a.body
    - unless @organization.claimed?
      %li
        %p 
          This profile has not been claimed. If you are affiliated with 
          this organization, and would like to manage this profile, #{link_to "click here", claim_organization_path(@organization), 'data-remote' => true}.
          
        
      
  
  
  
  
  